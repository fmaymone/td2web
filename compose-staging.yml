x-app: &app
  image: tdv2-prod:0.0.1
  build:
    context: .
    dockerfile: Dockerfile.prod
    args:
      RUBY_VERSION: '3.1.4'
      PG_MAJOR: '15'
      NODE_MAJOR: '18'
      YARN_VERSION: '1.22.19'
      NODE_ENV: production
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      NODE_OPTIONS: '--openssl-legacy-provider'
  environment: &env
    NODE_ENV: production
    RAILS_ENV: production
  env_file:
    - .env.staging
  tmpfs:
    - /tmp:rw,noexec,nosuid,mode=1770
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  working_dir: /app
  volumes:
    - app_log:/app/log
    - app_tmp:/app/tmp:cached
    - history:/usr/local/hist
    - storage:/app/storage
  environment: &backend_environment
    <<: *env
    DATABASE_URL: postgres://postgres:postgres@postgres:5432/tdv2
    MEMCACHED_URL: memcached://memcached:11211
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-2}
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    XDG_DATA_HOME: /app/tmp/caches
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
    HISTFILE: /usr/local/hist/.bash_history
    PSQL_HISTFILE: /usr/local/hist/.psql_history
    IRB_HISTFILE: /usr/local/hist/.irb_history
    NODE_ENV: ${RAILS_ENV:-production}
    RAILS_ENV: ${RAILS_ENV:-production}
  depends_on: &backend_depends_on
    postgres:
      condition: service_healthy

services:
  web:
    <<: *backend
    command: bin/docker_web_entrypoint.sh
    deploy:
      replicas: 2
    ports:
      - '3000'
  worker:
    <<: *backend
    command: bundle exec rake jobs:work
  clock:
    <<: *backend
    command: bundle exec clockwork clock.rb
  postgres:
    image: postgres:15.3
    volumes:
      - postgres:/var/lib/postgresql/data
      - history:/user/local/hist
    environment:
      PSQL_HISTFILE: /user/local/hist/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
  memcached:
    image: memcached:latest
    command: memcached -m 64
    ports:
      - '11211'
  nginx:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - ./containers/nginx/nginx.conf:/etc/nginx/nginx.conf

volumes:
  app_log:
  app_tmp:
  history:
  postgres:
  storage:
